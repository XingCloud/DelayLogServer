#!/bin/sh
base_dir=`dirname $0`/..

# get arguments
COMMAND=$1
shift

memarg="-server -Xms4g -Xmx8g -Xss160K"
gcarg="-XX:SurvivorRatio=16 -XX:+UseConcMarkSweepGC -XX:NewSize=512M -XX:MaxNewSize=512M -XX:+UseAdaptiveSizePolicy -XX:-ExplicitGCInvokesConcurrent -XX:+UseCMSCompactAtFullCollection -XX:CMSFullGCsBeforeCompaction=2"
####verboses="-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+PrintHeapAtGC -XX:+PrintGCApplicationStoppedTime"
verboses="-XX:+HeapDumpOnOutOfMemoryError"
main=com.xingcloud.delayserver.ProcessDelayLog
dumpMain=com.xingcloud.dumpredis.DumpRedis
readMain=com.xingcloud.readredis.ReadRedisKeyFile
fileencoding="-Dfile.encoding=UTF-8"
classpath=$base_dir/conf
for i in $base_dir/lib/*.jar;
do
 classpath=$classpath:$i
done
for i in $base_dir/dist/*.jar;
do 
 classpath=$classpath:$i
done

start_dp()
{
    pids=`ps xwww | grep com.xingcloud.delayserver.ProcessDelayLo[g] | awk '{print $1}'`
    if [ "$pids" != "" ];then
        return 1 
    fi
    nohup java $fileencoding $memarg $gcarg $verboses -classpath $classpath $main >/dev/null 2>&1  &
    sleep 1
    pid=`ps xwww | grep com.xingcloud.delayserver.ProcessDelayLo[g] | awk '{print $1}'`
    if [ "$pid" != "" ];then
        return 0
    else
        return 1    
    fi
}

stop_dp(){
    pids=`ps xwww | grep com.xingcloud.delayserver.ProcessDelayLo[g] | awk '{print $1}'`
    if [ "$pids" != "" ];then
        kill -9 $pids
    fi
    sleep 1
    pid=`ps xwww | grep com.xingcloud.delayserver.ProcessDelayLo[g] | awk '{print $1}'`
    if [ "$pid" = "" ];then
        return 0
    else
        return 1     
    fi
}

read_redis(){
   echo "java $fileencoding $memarg $gcarg $verboses -classpath $classpath $readMain readRedisKey >/dev/null 2>&1  &"
   java $fileencoding $memarg $gcarg $verboses -classpath $classpath $readMain readRedisKey >/dev/null 2>&1  &
}

dump_redis(){
  echo "java $fileencoding $memarg $gcarg $verboses -classpath $classpath $dumpMain dumpRedis >/dev/null 2>&1  &"
  java $fileencoding $memarg $gcarg $verboses -classpath $classpath $dumpMain dumpRedis >/dev/null 2>&1  &
}

process_delay(){
  echo "java $fileencoding $memarg $gcarg $verboses -classpath $classpath $dumpMain processDelay >/dev/null 2>&1  &"
  java $fileencoding $memarg $gcarg $verboses -classpath $classpath $dumpMain processDelay >/dev/null 2>&1  &
}

if [ "$COMMAND" = "start" ];then
    if start_dp ; then
        exit 0
    else
        exit 1
    fi
elif [ "$COMMAND" = "stop" ];then
    if stop_dp ; then
        exit 0
    else
        exit 1
    fi
elif [ "$COMMAND" = "restart" ];then
    if stop_dp ; then
        if start_dp ;then
            exit 0
        else
            exit 1
        fi
    else
        exit 1
    fi
elif [ "$COMMAND" = "dumpRedis" ];then
    dump_redis;
elif [ "$COMMAND" = "processDelay" ];then
    process_delay;
elif [ "$COMMAND" = "readRedisKey" ];then
    read_redis;
fi
